"use strict"
var BolckFile = require('blockparser').blockFile;
var fileUtils = require('file-utils');
var path = require('path');

var  Tools = function(){};

/**
 * 通过预览文件模板内容产生真实的模板文件。
 * @param templateContent 模板内容
 * @param tofilename 文件内容存取的文件名
 */
Tools.prototype.genPreviewContent = function(templateContent , tofilename) {
    
    var blockfile = new BolckFile(templateContent);
    var blocks = blockfile.blocks;

    var  templatePath = path.resolve(__dirname, '../templates/preview.html');
    var content =  fileUtils.read(templatePath);
    var  blockMap = {};
    for(var i=0 ; i<blocks.length ; i++){
        var b = blocks[i];
        var bArray = blockMap[b.blockType];
        if(!bArray){
           bArray = [];
           blockMap[b.blockType] = bArray;
        }
        bArray.push(b.blockInnerContent);
    }
    content = content.replace(/<head>([\s\S]*)<\/head>/gi , function(match , _content , offset , str){
        var cssBlocks = blockMap['css'];
        _content = _content + cssBlocks.join('\n');
        var basecoreBlocks = blockMap['basejs'];
        _content = _content + basecoreBlocks.join('\n');
        return "<head>\n"+_content+"\n<head>";
    });

    //
    content = content.replace(/<body>([\s\S]*)<\/body>/gi , function(match , _content , offset , str){
        var cssBlocks = blockMap['css'];
        _content = cssBlocks.join('\n')+_content;
        var blocks = blockMap['js'];
        _content = blocks.join('\n') + _content;
        blocks = blockMap['requirejs'];
        _content = blocks.join('\n') + _content;

        return "<body>\n"+_content+"\n<body>";
    });

    //删除注释
    content = content.replace(/<!--[\w\W\r\n]*?-->/gmi , function(match , _content , offset , str){
            return "";
    });
    //去掉空行
    content = content.replace(/^\s*$/,null);
    return content;
};

module.exports = new Tools();